/**
 * Financial Year Management Component
 * Handles closing current financial year and starting new one with admin password
 */
import React, { useState } from 'react'
import { Button } from './ui/button'
import { Input } from './ui/input'
import { Card, CardContent, CardHeader, CardTitle } from './ui/card'
import { Badge } from './ui/badge'
import { 
  Calendar, 
  Lock, 
  AlertTriangle,
  CheckCircle,
  Download,
  Eye,
  EyeOff
} from 'lucide-react'

export default function FinancialYearManagement() {
  const [showPasswordForm, setShowPasswordForm] = useState(false)
  const [password, setPassword] = useState('')
  const [showPassword, setShowPassword] = useState(false)
  const [isProcessing, setIsProcessing] = useState(false)

  // Current financial year data
  const currentYear = {
    id: '2025-2026',
    startMonth: '‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü',
    startYear: 2025,
    endMonth: '‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á',
    endYear: 2026,
    isActive: true,
    totalIncome: 175000,
    totalExpense: 125000,
    balance: 50000,
    totalMembers: 35,
    membersWithDues: 33, // Members who have paid all dues
    progress: 94 // Percentage of completion
  }

  const handleCloseFinancialYear = async () => {
    if (password !== 'admin123') {
      alert('‡¶≠‡ßÅ‡¶≤ ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶°!')
      return
    }

    if (currentYear.membersWithDues < currentYear.totalMembers) {
      const remainingMembers = currentYear.totalMembers - currentYear.membersWithDues
      const confirmClose = confirm(
        `‡¶è‡¶ñ‡¶®‡¶ì ${remainingMembers} ‡¶ú‡¶® ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø‡ßá‡¶∞ ‡¶ö‡¶æ‡¶Å‡¶¶‡¶æ ‡¶¨‡¶æ‡¶ï‡¶ø ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶Ø‡ßá ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶®?`
      )
      if (!confirmClose) return
    }

    setIsProcessing(true)

    // Simulate processing
    setTimeout(() => {
      alert(`‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ${currentYear.startYear}-${currentYear.endYear} ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!

üìä ‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü:
‚Ä¢ ‡¶Æ‡ßã‡¶ü ‡¶Ü‡¶Ø‡¶º: ‡ß≥${currentYear.totalIncome.toLocaleString('bn-BD')}
‚Ä¢ ‡¶Æ‡ßã‡¶ü ‡¶¨‡ßç‡¶Ø‡¶Ø‡¶º: ‡ß≥${currentYear.totalExpense.toLocaleString('bn-BD')}
‚Ä¢ ‡¶®‡¶ø‡¶ü ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏: ‡ß≥${currentYear.balance.toLocaleString('bn-BD')}

üÜï ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: ${currentYear.endYear}-${currentYear.endYear + 1}`)
      
      setIsProcessing(false)
      setShowPasswordForm(false)
      setPassword('')
    }, 2000)
  }

  return (
    <div className="p-6">
      <div className="mb-6">
        <h1 className="text-3xl font-bold text-gray-900">‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ</h1>
        <p className="text-gray-600">‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶õ‡¶∞ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®</p>
      </div>

      {/* Current Financial Year Status */}
      <Card className="mb-6">
        <CardHeader>
          <CardTitle className="flex items-center justify-between">
            <span className="flex items-center">
              <Calendar className="h-5 w-5 mr-2" />
              ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞
            </span>
            <Badge variant="default" className="bg-green-100 text-green-800">‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º</Badge>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
            <div className="text-center p-4 bg-blue-50 rounded-lg">
              <div className="text-2xl font-bold text-blue-600">
                {currentYear.startYear}-{currentYear.endYear}
              </div>
              <div className="text-sm text-blue-700">
                {currentYear.startMonth} {currentYear.startYear} - {currentYear.endMonth} {currentYear.endYear}
              </div>
            </div>
            
            <div className="text-center p-4 bg-green-50 rounded-lg">
              <div className="text-2xl font-bold text-green-600">
                ‡ß≥{currentYear.totalIncome.toLocaleString('bn-BD')}
              </div>
              <div className="text-sm text-green-700">‡¶Æ‡ßã‡¶ü ‡¶Ü‡¶Ø‡¶º</div>
            </div>
            
            <div className="text-center p-4 bg-red-50 rounded-lg">
              <div className="text-2xl font-bold text-red-600">
                ‡ß≥{currentYear.totalExpense.toLocaleString('bn-BD')}
              </div>
              <div className="text-sm text-red-700">‡¶Æ‡ßã‡¶ü ‡¶¨‡ßç‡¶Ø‡¶Ø‡¶º</div>
            </div>
            
            <div className="text-center p-4 bg-purple-50 rounded-lg">
              <div className="text-2xl font-bold text-purple-600">
                ‡ß≥{currentYear.balance.toLocaleString('bn-BD')}
              </div>
              <div className="text-sm text-purple-700">‡¶®‡¶ø‡¶ü ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏</div>
            </div>
          </div>

          {/* Progress */}
          <div className="mb-6">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium text-gray-700">‡¶ö‡¶æ‡¶Å‡¶¶‡¶æ ‡¶Ü‡¶¶‡¶æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶Ö‡¶ó‡ßç‡¶∞‡¶ó‡¶§‡¶ø</span>
              <span className="text-sm text-gray-500">{currentYear.membersWithDues}/{currentYear.totalMembers} ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-3">
              <div 
                className="bg-blue-600 h-3 rounded-full" 
                style={{ width: `${currentYear.progress}%` }}
              ></div>
            </div>
            <p className="text-sm text-gray-600 mt-1">{currentYear.progress}% ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®</p>
          </div>

          {/* Warnings */}
          {currentYear.membersWithDues < currentYear.totalMembers && (
            <div className="p-4 bg-yellow-50 border border-yellow-200 rounded-lg mb-4">
              <div className="flex items-start space-x-3">
                <AlertTriangle className="h-5 w-5 text-yellow-600 mt-0.5" />
                <div>
                  <h4 className="font-medium text-yellow-800">‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ</h4>
                  <p className="text-sm text-yellow-700 mt-1">
                    ‡¶è‡¶ñ‡¶®‡¶ì {currentYear.totalMembers - currentYear.membersWithDues} ‡¶ú‡¶® ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø‡ßá‡¶∞ ‡¶ö‡¶æ‡¶Å‡¶¶‡¶æ ‡¶¨‡¶ï‡ßá‡¶Ø‡¶º‡¶æ ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ 
                    ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶∏‡¶ï‡¶≤ ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø‡ßá‡¶∞ ‡¶ö‡¶æ‡¶Å‡¶¶‡¶æ ‡¶Ü‡¶¶‡¶æ‡¶Ø‡¶º ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§
                  </p>
                </div>
              </div>
            </div>
          )}

          {/* Action Buttons */}
          <div className="flex space-x-3">
            <Button 
              onClick={() => setShowPasswordForm(true)}
              variant={currentYear.membersWithDues === currentYear.totalMembers ? "default" : "destructive"}
              disabled={isProcessing}
            >
              <Lock className="h-4 w-4 mr-2" />
              ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®
            </Button>
            <Button variant="outline">
              <Download className="h-4 w-4 mr-2" />
              ‡¶¨‡¶æ‡¶∞‡ßç‡¶∑‡¶ø‡¶ï ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Password Confirmation Form */}
      {showPasswordForm && (
        <Card className="border-red-200">
          <CardHeader>
            <CardTitle className="text-red-800 flex items-center">
              <Lock className="h-5 w-5 mr-2" />
              ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶® ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="p-4 bg-red-50 border border-red-200 rounded-lg">
                <h4 className="font-medium text-red-800 mb-2">‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ</h4>
                <ul className="text-sm text-red-700 space-y-1">
                  <li>‚Ä¢ ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶Ü‡¶∞ ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶®‡¶æ</li>
                  <li>‚Ä¢ ‡¶∏‡¶ï‡¶≤ ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶π‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá</li>
                  <li>‚Ä¢ ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ‡¶∏‡ßç‡¶¨‡¶Ø‡¶º‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶≠‡¶æ‡¶¨‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶¨‡ßá</li>
                  <li>‚Ä¢ ‡¶è‡¶á ‡¶ï‡¶æ‡¶ú‡¶ü‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®</li>
                </ul>
              </div>

              <div>
                <label className="text-sm font-medium text-gray-700 mb-2 block">
                  ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° *
                </label>
                <div className="relative">
                  <Input
                    type={showPassword ? "text" : "password"}
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    placeholder="‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®"
                    className="pr-10"
                  />
                  <button
                    type="button"
                    onClick={() => setShowPassword(!showPassword)}
                    className="absolute right-3 top-3 text-gray-400 hover:text-gray-600"
                  >
                    {showPassword ? <EyeOff className="h-4 w-4" /> : <Eye className="h-4 w-4" />}
                  </button>
                </div>
              </div>

              <div className="flex space-x-3">
                <Button 
                  onClick={handleCloseFinancialYear}
                  disabled={!password || isProcessing}
                  className="bg-red-600 hover:bg-red-700"
                >
                  {isProcessing ? (
                    <>
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                      ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶ï‡¶∞‡¶£...
                    </>
                  ) : (
                    <>
                      <CheckCircle className="h-4 w-4 mr-2" />
                      ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®
                    </>
                  )}
                </Button>
                <Button 
                  variant="outline" 
                  onClick={() => {
                    setShowPasswordForm(false)
                    setPassword('')
                  }}
                  disabled={isProcessing}
                >
                  ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Previous Financial Years */}
      <Card>
        <CardHeader>
          <CardTitle>‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞‡¶∏‡¶Æ‡ßÇ‡¶π</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
              <div>
                <h4 className="font-medium text-gray-900">‡ß®‡ß¶‡ß®‡ß™-‡ß®‡ß¶‡ß®‡ß´</h4>
                <p className="text-sm text-gray-600">‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü ‡ß®‡ß¶‡ß®‡ß™ - ‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á ‡ß®‡ß¶‡ß®‡ß´</p>
              </div>
              <div className="text-right">
                <Badge variant="secondary">‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®</Badge>
                <div className="text-sm text-gray-600 mt-1">
                  ‡¶®‡¶ø‡¶ü ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏: ‡ß≥‡ß®‡ß´,‡ß¶‡ß¶‡ß¶
                </div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}